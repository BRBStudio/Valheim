const { ActivityType } = require(`discord.js`)
const ms = require('ms');
const figlet = require('figlet'); // ƒê·∫£m b·∫£o b·∫°n ƒë√£ c√†i ƒë·∫∑t g√≥i figlet
const mongoose = require('mongoose');
require('dotenv').config(); // T·∫£i bi·∫øn m√¥i tr∆∞·ªùng t·ª´ .env
const config = require(`../../config`)
const autoresponderHandler = require('../../Handlers/autoresponderHandler');

module.exports = {
    name: "ready",
    once: true,
    async execute(client) {

        // // TƒÉng s·ªë l∆∞·ª£ng listener t·ªëi ƒëa cho client
        // client.setMaxListeners(60);

        const { user, ws } = client

        // L·∫•y chu·ªói k·∫øt n·ªëi MongoDB t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
        const mongodb = process.env.MONGODB_URI;
        // console.log('Chu·ªói k·∫øt n·ªëi MongoDB:', mongodb);

        // K·∫øt n·ªëi ƒë·∫øn MongoDB
        if (!mongodb) {
            console.error('Kh√¥ng c√≥ chu·ªói k·∫øt n·ªëi MongoDB ƒë∆∞·ª£c cung c·∫•p trong .env');
            return;
        }

        // K·∫øt n·ªëi MongoDB
        mongoose.connect(mongodb)
            .then(() => {
                // Khi k·∫øt n·ªëi th√†nh c√¥ng, hi·ªÉn th·ªã vƒÉn b·∫£n ASCII trong console
                figlet('Ket noi MongoDB thanh cong!', function (err, data) {
                    if (err) {
                        console.log('C√≥ l·ªói x·∫£y ra khi t·∫°o vƒÉn b·∫£n ASCII:', err);
                        return;
                    }
                    const border = '*'.repeat(data.split('\n')[0].length + 4); // T·∫°o ƒë∆∞·ªùng vi·ªÅn cho ASCII art
                    console.log(border);
                    console.log(`* ${data.trim()} *`); // ‚ãÜ‚¶ø ‚ãÜ
                    console.log(border);
                });

                // K√≠ch ho·∫°t autoresponder handler khi k·∫øt n·ªëi th√†nh c√¥ng
                // console.log('K√≠ch ho·∫°t autoresponder handler.');
                autoresponderHandler(client);

            })
            .catch(err => {
                console.error('L·ªói k·∫øt n·ªëi MongoDB:', err);
            });

        // H√†m ƒë·ªÉ c·∫≠p nh·∫≠t ho·∫°t ƒë·ªông c·ªßa bot
        function updateActivity() {
            const currentActivity = user.presence.activities[0];
            if (currentActivity && currentActivity.name.startsWith('Ping:')) {
                user.setActivity({
                    name: 'üîû Streaming Status!',
                    type: ActivityType.Streaming,
                    url: 'https://www.youtube.com/watch?v=kp7pXzjXStw',
                    details: 'ƒê√¢y l√† m·ªôt th√¥ng ƒëi·ªáp m√¥ t·∫£ ho·∫°t ƒë·ªông',
                    state: '/bot-commands | Valheim Studio',
                });
            } else {
                const ping = ws.ping;
                user.setActivity({
                    name: `Ping: ${ping} ms`,
                    type: 3,
                });
            }
        }

        // C·∫≠p nh·∫≠t ho·∫°t ƒë·ªông m·ªói 5 gi√¢y
        setInterval(updateActivity, ms("5m"));

        // console.log((`‚úîÔ∏è  ${client.user.username} ƒë√£ ƒë∆∞·ª£c b·∫≠t\n‚úîÔ∏è  ID Bot: ${client.user.id}`));
        // console.log(`ƒê·∫£m b·∫£o tham gia m√°y ch·ªß h·ªó tr·ª£ n·∫øu b·∫°n c·∫ßn b·∫•t k·ª≥ tr·ª£ gi√∫p n√†o: ${config.botServerInvite}`);
    },
};

/*=============== ƒê∆∞·ª£c Th·ª±c Hi·ªán B·ªüi Valheim Survival ================
||                                                                  ||
||    ____    ____    ____     ____   _               _ _           ||
||   | __ )  |  _ \  | __ )   / ___| | |_   _   _  __| (_)  ___     ||
||   |  _ \  | |_) | |  _ \   \___ \ | __| | | | |/ _` | | / _ \    ||
||   | |_) | |  _ <  | |_) |   ___) || |_  | |_| | (_| | |( (_) |   ||
||   |____/  |_| \_\ |____/   |____/  \__|  \__,_|\__,_|_| \___/    ||
||                                                                  ||
=====================================================================*/