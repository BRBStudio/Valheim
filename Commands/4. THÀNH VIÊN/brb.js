const { SlashCommandBuilder, EmbedBuilder, ActionRowBuilder, ButtonBuilder } = require("discord.js");
const config = require("../../config");
const { row } = require("../../ButtonPlace/ActionRowBuilder");

module.exports = {
    data: new SlashCommandBuilder()
        .setName("brb")
        .setDMPermission(false)
        .setDescription("Menu h·ªó tr·ª£ m√°y ch·ªß BRB Studio"),

async execute(interaction) {
            const linkmod =
            "[üìÇ‚îäü¶ãùë≥ùíäùíèùíå-ùë¥ùíêùíÖü¶ã](https://discord.com/channels/1028540923249958912/1111674941557985400)";
            const kichhoatthanhvien =
            "[üìå‚îäü¶ãrulesü¶ã](https://discord.com/channels/1028540923249958912/1173537274542174218)";
            const { guild } = interaction; ////t∆∞∆°ng t√°c l·ªánh l√† d√πng
            const id = guild.id; /// id ng∆∞·ªùi d√πng discord

            const embeds = [
            // C√°c embed ·ªü ƒë√¢y
            new EmbedBuilder()
                .setTitle(config.TitleOnGame)
                .setColor(config.embedCyan)
                .setDescription(
                `**ƒë·ªÉ v√†o game b·∫°n c·∫ßn v√†o ƒë·ªìng √Ω lu·∫≠t t·∫°i ${kichhoatthanhvien} ƒë·ªÉ tr·ªü th√†nh Th√†nh Vi√™n tr∆∞·ªõc ƒë√£**`
                )
                .addFields(
                {
                    name: "√Ω nghƒ©a th√†nh vi√™n",
                    value: `Ch·ªâ khi n√†o b·∫°n l√† Th√†nh Vi√™n b·∫°n m·ªõi c·∫≠p nh·∫≠t v√† t∆∞∆°ng t√°c ƒë∆∞·ª£c v·ªõi m·ªçi th·ª© li√™n quan ƒë·∫øn Valheim Survival.`,
                },
                {
                    name: "V√≠ d·ª•",
                    value:
                    "```js\nB·∫°n mu·ªën v√†o server Valheim Survival? b·∫°n mu·ªën l·∫•y link mod? b·∫°n mu·ªën theo d√µi qu√° tr√¨nh server ƒëang c·∫≠p nh·∫≠t g√¨ v√† c·∫≠p nh·∫≠t ƒë·∫øn ƒë√¢u? ch·ªâ khi b·∫°n l√† th√†nh vi√™n m·ªõi xem ƒë∆∞·ª£c ƒëi·ªÅu ƒë√≥ \n```",
                },
                {
                    name: "Gi·∫£i tr√¨nh",
                    value:
                    "Khi b·∫°n l√† th√†nh vi√™n ngo√†i nh·ªØng ƒëi·ªÅu n√≥i tr√™n b·∫°n s·∫Ω xem ƒë∆∞·ª£c t·∫•t c·∫£ m·ªçi th·ª© m√† ch·ªâ Th√†nh Vi√™n m·ªõi c√≥.\n\n```bash\nValheim Survival\n```",
                    inline: false,
                }
                )
                .setImage(`https://i.imgur.com/9bQGPQM.gif`)
                .setFooter({ text: `Trang 1` }), //// ch√¢n trang

            new EmbedBuilder()
                .setTitle(config.TitleCaiMod)
                .setDescription(
                `**B·∫Øt ƒê·∫ßu T·∫£i & C√†i Mod.**\nCh·ªâ khi l√† Th√†nh Vi√™n b·∫°n m·ªõi th·∫•y ${linkmod}.`
                )
                .addFields(
                {
                    name: "H∆∞·ªõng d·∫´n t·∫£i mod",
                    value:
                    "```js\nv√†o link mod trong m·ª•c th√¥ng tin c·∫≠p nh·∫≠t ƒë·ªÉ t·∫£i mod\n```",
                },
                {
                    name: "C√†i mod",
                    value:
                    "```js\nGi·∫£i n√©n file mod b·∫°n v·ª´a t·∫£i v·ªÅ, coppy to√†n b·ªô file b√™n trong folder BRB STUDIO => paste v√†o n∆°i b·∫°n ƒë·ªÉ game valheim tr√™n steam.\nN·∫øu kh√¥ng bi·∫øt file ƒë√≥ n·∫±m ·ªü ƒë√¢u th√¨ b·∫°n c√≥ th·ªÉ v√†o steam => th∆∞ vi·ªán steam => valheim k√≠ch chu·ªôt ph·∫£i => ch·ªçn qu·∫£n l√Ω (d√≤ng s·ªë 4) => ch·ªçn m·ªü th∆∞ m·ª•c tr√™n m√°y ( d√≤ng s·ªë 2)\n```",
                    inline: false,
                }
                )
                .setImage(`https://i.imgur.com/9bQGPQM.gif`)
                .setFooter({ text: `Trang 2` }), //// ch√¢n trang,

            new EmbedBuilder()
                .setTitle(config.TitleBRB)
                .setColor(config.embedRandom)
                .setDescription(config.DescriptionBRB)
                .addFields(
                {
                    name: "/ping",
                    value: "```ƒê·ªô tr·ªÖ g·ª≠i v·ªÅ```",
                },
                {
                    name: "/brb",
                    value: "```Menu h·ªó tr·ª£.```",
                },
                {
                    name: "/announce",
                    value: "```G·ª≠i th√¥ng b√°o n√¢ng cao, ch·ªâ h·ªó tr·ª£ quy·ªÅn Admin.```",
                },
                {
                    name: "/ban",
                    value:
                    '```"Ban" nick c·ªßa ng∆∞·ªùi ch∆°i n√†o ƒë√≥, ch·ªâ h·ªó tr·ª£ quy·ªÅn Admin.```',
                },
                {
                    name: "/kick",
                    value:
                    "\n```'Kick' nick c·ªßa ng∆∞·ªùi ch∆°i n√†o ƒë√≥, ch·ªâ h·ªó tr·ª£ quy·ªÅn Admin.\n```",
                },
                {
                    name: "/unban",
                    value:
                    "\n```B·ªè 'ban' nick c·ªßa ng∆∞·ªùi ch∆°i n√†o ƒë√≥, ch·ªâ h·ªó tr·ª£ quy·ªÅn Admin.\n```",
                },
                {
                    name: "/basic",
                    value: "\n```H·ªó tr·ª£ c∆° b·∫£n\n```",
                },
                {
                    name: "/clear",
                    value: "\n```X√≥a tin nh·∫Øn c·ªßa ai ƒë√≥, t·ªëi ƒëa 98 tin.\n```",
                },
                {
                    name: "/emoji",
                    value: "\n```Xem t·∫•t c·∫£ emoji c√≥ trong ‚òÖÂΩ° BÕôRÕôBÕô SÕôTÕôUÕôDÕôIÕôOÕô ÂΩ°‚òÖ.\n```",
                },
                {
                    name: "/event",
                    value: "\n```Event trong Valheim, ch·ªâ h·ªó tr·ª£ quy·ªÅn Admin.\n```",
                },
                {
                    name: "/feedback",
                    value:
                    "G·ª≠i ph·∫£n h·ªìi cho nh√≥m ƒëi·ªÅu h√†nh, trong ƒë√≥ c√≥:\n```+ M·ª•c ph·∫£n h·ªìi.\n+ Th√¥ng tin ph·∫£n h·ªìi.\n```",
                },
                {
                    name: "/giverole",
                    value:
                    "\n```Cung c·∫•p cho ng∆∞·ªùi d√πng m·ªôt vai tr√≤. ch·ªâ h·ªó tr·ª£ quy·ªÅn Admin.\n```",
                },
                {
                    name: "/hi",
                    value: "\n```N√≥i l·ªùi ch√†o v·ªõi ai ƒë√≥.\n```",
                },
                {
                    name: "/notification",
                    value:
                    "\nT·∫°o th√¥ng b√°o m·ªõi, trong ƒë√≥ c√≥:\n```+ Ti√™u ƒë·ªÅ n·ªôi dung c·ªßa b·∫°n\n+ M√¥ t·∫£ n·ªôi dung c·ªßa b·∫°n\n+ M√†u c·∫°nh vi·ªÅn c·ªßa b·∫°n\n+ H√¨nh ·∫£nh c·ªßa b·∫°n\n```",
                },
                {
                    name: "/help",
                    value: "\n```B·∫°n c·∫ßn ƒë∆∞a ra l·ª±a ch·ªçn s·∫Ω c√≥ l·ªùi gi·∫£i ƒë√°p\n```",
                },
                {
                    name: "/user-info",
                    value:
                    "\n```Cung c·∫•p th√¥ng tin v·ªÅ ng∆∞·ªùi d√πng, b·∫°n c√≥ th·∫ø ch·ªâ ƒë·ªãnh ng∆∞·ªùi m√† b·∫°n mu·ªën l·∫•y th√¥ng tin\n```",
                }
                )
                .setImage(`https://i.imgur.com/9bQGPQM.gif`)
                .setFooter({ text: `Trang 3` }), //// ch√¢n trang,
            ];

        let currentPage = 0;

            try {
                const message = await interaction.reply({
                    embeds: [embeds[currentPage]],
                    components: [row],
                    ephemeral: true, // ƒê·∫∑t ephemeral th√†nh true ƒë·ªÉ ch·ªâ hi·ªÉn th·ªã th√¥ng b√°o cho ng∆∞·ªùi d√πng ƒë√£ k√≠ch ho·∫°t l·ªánh.
                    //B·∫±ng c√°ch th√™m ephemeral: true v√†o interaction.reply ph∆∞∆°ng th·ª©c,
                    //ph·∫£n h·ªìi s·∫Ω ch·ªâ hi·ªÉn th·ªã v·ªõi ng∆∞·ªùi d√πng ƒë√£ k√≠ch ho·∫°t l·ªánh v√† n√≥ s·∫Ω kh√¥ng hi·ªÉn th·ªã v·ªõi nh·ªØng ng∆∞·ªùi d√πng kh√°c trong c√πng k√™nh.
                });
            } catch (error) {
                if (error.code === 10062) {
                    console.error("L·ªói t∆∞∆°ng t√°c khi g·ª≠i tin nh·∫Øn:", error);
                    return;
                }
            }

        const filter = (i) =>
            (i.customId === "previouss_button" ||
                i.customId === "nextt_button" ||
                i.customId === "restartt_button") &&
            i.user.id === interaction.user.id;

        const collector = interaction.channel.createMessageComponentCollector({
            filter,
        });

        collector.on("collect", async (i) => {
            try {
                if (i.customId === "previouss_button") {
                        currentPage--;
                    } else if (i.customId === "nextt_button") {
                        currentPage++;
                    } else if (i.customId === "restartt_button") {
                        currentPage = 0;
                    }

                if (currentPage >= 0 && currentPage < embeds.length) {
                        await i.update({
                            embeds: [embeds[currentPage]],
                            components: [row],
                        });
                    } else {
                        await i.update({
                            embeds: [
                            new EmbedBuilder()
                                .setDescription("Kh√¥ng c√≤n trang n√†o.")
                                .setColor(config.embedWhite)
                            ],
                            components: [
                            new ActionRowBuilder().addComponents(
                                new ButtonBuilder()
                                .setCustomId("restartt_button")
                                .setEmoji(`<:UK8zaNG86f:1250122827596697620>`)
                                .setStyle("Primary"))
                            ],
                        });
                    }
            } catch (error) {
                if (error.code === 10062) {
                    console.error("L·ªói t∆∞∆°ng t√°c khi c·∫≠p nh·∫≠t tin nh·∫Øn:", error);
                    return;
                }
            }
        });

        collector.on("end", (collected) => {
            if (collected.size === 0) {
                interaction.followUp("B·∫°n m·∫•t qu√° nhi·ªÅu th·ªùi gian ƒë·ªÉ tr·∫£ l·ªùi.");
            }
        });
    },
};
