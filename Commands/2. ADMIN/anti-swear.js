// anti-swear.js
const { SlashCommandBuilder, EmbedBuilder, PermissionsBitField } = require('discord.js');
const AntiwordConfig = require('../../schemas/antiwordSchema');
const colors = require('../../lib/colorConverter');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('anti-swear')
        .setDMPermission(false)
        .setDescription('C·∫•u h√¨nh h·ªá th·ªëng ch·ªëng ch·ª≠i th·ªÅ')
        .setDefaultMemberPermissions(PermissionsBitField.Flags.ManageGuild)
        .addSubcommand(command => command.setName("addword").setDescription('ü§¨ | Th√™m m·ªôt t·ª´ v√†o danh s√°ch t·ª´ x·∫•u').addStringOption(option => option.setName('badword').setDescription('T·ª´ b·∫°n mu·ªën th√™m').setRequired(true)))
        .addSubcommand(command => command.setName('channel').setDescription('ü§¨ | Thi·∫øt l·∫≠p K√™nh ki·ªÉm duy·ªát ng∆∞·ªùi d√πng ƒë√£ d√πng t·ª´ x·∫•u').addChannelOption(option => option.setName('channels').setDescription('k√™nh m√† b·∫°n mu·ªën ki·ªÉm duy·ªát ng∆∞·ªùi d√πng ƒë√£ d√πng t·ª´ x·∫•u').setRequired(true)))
        .addSubcommand(command => command.setName('remove').setDescription('ü§¨ | X√≥a m·ªôt t·ª´ kh·ªèi danh s√°ch t·ª´ x·∫•u').addStringOption(option => option.setName('word').setDescription('T·ª´ c·∫ßn x√≥a').setRequired(true)))
        .addSubcommand(command => command.setName('list').setDescription('ü§¨ | Xem danh s√°ch t·ª´ x·∫•u'))
        .addSubcommand(command => command.setName('removeall').setDescription('ü§¨ | X√≥a t·∫•t c·∫£ t·ª´ x·∫•u'))
        .addSubcommand(command => command.setName('removechannel').setDescription('ü§¨ | X√≥a thi·∫øt l·∫≠p K√™nh ki·ªÉm duy·ªát ng∆∞·ªùi d√πng ƒë√£ d√πng t·ª´ x·∫•u')),

    async execute(interaction) {

        if (!interaction.guild) {
                interaction.reply("B·∫°n ch·ªâ c√≥ th·ªÉ d√πng l·ªánh c·ªßa bot ·ªü trong sever");
                return;
            }

        const sub = interaction.options.getSubcommand();

        switch (sub) {
            
            case "addword":
                const guildId = interaction.guild.id;
                const badword = interaction.options.getString('badword').toLowerCase();
                let guildConfig = await AntiwordConfig.findOne({ guildId });

                if (!guildConfig) {
                    guildConfig = new AntiwordConfig({
                    guildId: guildId,
                    badWords: [badword]
                    });
                } else {
                        if (!guildConfig.badWords) {
                        guildConfig.badWords = [badword];
                    } else {
                            // Ki·ªÉm tra xem t·ª´ ƒë√≥ ƒë√£ t·ªìn t·∫°i trong m·∫£ng badWords ch∆∞a
                            if (!guildConfig.badWords.includes(badword)) {
                            guildConfig.badWords.push(badword);
                        } else {
                            // N·∫øu t·ª´ ƒë√£ t·ªìn t·∫°i, h√£y g·ª≠i tin nh·∫Øn cho bi·∫øt r·∫±ng
                            interaction.reply(`T·ª´ **${badword}** ƒë√£ t·ªìn t·∫°i trong danh s√°ch t·ª´ x·∫•u.`);
                            return;
                        }
                    }
                }

                await guildConfig.save();

                const embedAdd = new EmbedBuilder()
                    .setColor(colors.embedBlack) 
                    .setDescription(` Th√†nh c√¥ng!\n ƒê√£ th√™m **${badword}** v√†o danh s√°ch t·ª´ x·∫•u`)
                    .setImage(`https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExeG9sZmxiYTN4ZXMxaWY3c2R1dHZudGp3bWl4OG1uZmxnZDVmOXJ6MiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/dhsagLKDGYVySLsDrF/giphy.gif`);

                interaction.reply({ embeds: [embedAdd] });
            break;

            case "remove":
                const word = interaction.options.getString('word').toLowerCase();
                const guildIdToRemove = interaction.guild.id;

                await AntiwordConfig.findOneAndUpdate(
                    { guildId: guildIdToRemove },
                    { $pull: { badWords: word } }
                );

                const embedRemove = new EmbedBuilder()
                    .setColor(colors.embedGreen) 
                    .setDescription(`‚õî Th√†nh c√¥ng!\nüõë ƒê√£ x√≥a **${word}** kh·ªèi danh s√°ch t·ª´ x·∫•u`)
                    .setImage(`https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExeG9sZmxiYTN4ZXMxaWY3c2R1dHZudGp3bWl4OG1uZmxnZDVmOXJ6MiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/dhsagLKDGYVySLsDrF/giphy.gif`)
                    .setTimestamp();

                await interaction.reply({ embeds: [embedRemove] });
            break;

            case "list":
                const guildIdToList = interaction.guild.id;
                const guildConfigToList = await AntiwordConfig.findOne({ guildId: guildIdToList });

                if (!guildConfigToList || !guildConfigToList.badWords || guildConfigToList.badWords.length === 0) {
                const nowords = new EmbedBuilder()
                    .setColor(colors.embedCyan) 
                    .setDescription(`\`‚ùó Kh√¥ng c√≥ t·ª´ n√†o trong danh s√°ch t·ª´ x·∫•u!\``)
                    .setImage(`https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExeG9sZmxiYTN4ZXMxaWY3c2R1dHZudGp3bWl4OG1uZmxnZDVmOXJ6MiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/dhsagLKDGYVySLsDrF/giphy.gif`)
                    .setTimestamp();

                    return interaction.reply({ embeds: [nowords] });
                } else {
                const listembed = new EmbedBuilder()
                    .setAuthor({ name: `ƒê√¢y l√† danh s√°ch nh·ªØng t·ª´ x·∫•u`, iconURL: interaction.guild.iconURL() })
                    .setDescription(`*${guildConfigToList.badWords.join('\n')}*`)
                    .setImage(`https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExeG9sZmxiYTN4ZXMxaWY3c2R1dHZudGp3bWl4OG1uZmxnZDVmOXJ6MiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/dhsagLKDGYVySLsDrF/giphy.gif`)
                    .setColor(colors.embedBlack); 
                    await interaction.reply({ embeds: [listembed] });
                }
            break;

            case "channel":
                const selectedChannel = interaction.options.getChannel('channels');
                const guildIdForChannel = interaction.guild.id;

                await AntiwordConfig.findOneAndUpdate(
                    { guildId: guildIdForChannel },
                    { selectedChannelId: selectedChannel.id }
                );

                interaction.reply(`Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i v√†o k√™nh ${selectedChannel} ƒë·ªÉ b·∫°n ki·ªÉm duy·ªát.`);
            break;

            case "removeall":
                const guildIdToRemoveAll = interaction.guild.id;

                await AntiwordConfig.findOneAndUpdate(
                    { guildId: guildIdToRemoveAll },
                    { badWords: [] } // X√≥a t·∫•t c·∫£ c√°c t·ª´ x·∫•u
                );

                interaction.reply(`ƒê√£ x√≥a t·∫•t c·∫£ t·ª´ x·∫•u kh·ªèi danh s√°ch.`);
            break;

            case "removechannel":
                const guildIdToRemoveChannel = interaction.guild.id;

                await AntiwordConfig.findOneAndUpdate(
                    { guildId: guildIdToRemoveChannel },
                    { $unset: { selectedChannelId: "" } } // X√≥a thu·ªôc t√≠nh selectedChannelId
                );

                interaction.reply(`ƒê√£ x√≥a thi·∫øt l·∫≠p k√™nh ki·ªÉm duy·ªát ng∆∞·ªùi d√πng ƒë√£ d√πng t·ª´ x·∫•u.`);
            break;

            default:
                throw new Error('L·ªánh kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£.');
            }
    }
};