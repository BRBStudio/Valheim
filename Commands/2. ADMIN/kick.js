const { SlashCommandBuilder, EmbedBuilder, PermissionsBitField} = require('discord.js');

    module.exports = {
        data: new SlashCommandBuilder()
        .setName("kick")
        .setDescription("Kick 1 ng∆∞·ªùi d√πng")
        .setDefaultMemberPermissions(PermissionsBitField.Flags.KickMembers)
        .setDMPermission(false)
        .addUserOption(option =>
            option.setName("target")
                .setDescription("ng∆∞·ªùi d√πng s·∫Ω b·ªã ƒë√°.")
                .setRequired(true)
        )
        .addStringOption(option =>                                                    /////  th√™m ch·ªó vi·∫øt n∆°i ch·ªâ ƒë·ªãnh k√™nh c·∫ßn ƒëƒÉng
            option.setName("reason")
                .setDescription("l√Ω do ƒë√° th√†nh vi√™n")
                .setRequired(true)
                .setMinLength(1)                  //// nh·∫≠p 1 k√≠ t·ª± 
                .setMaxLength(5000)               //// cho ƒë·∫øn 5000 k√≠ t·ª±
        )
        .addAttachmentOption(option =>
            option.setName('picture')
                .setDescription('Th√™m h√¨nh ·∫£nh li√™n quan th·∫±ng ƒë√≥ vi ph·∫°m lu·∫≠t')
                .setRequired(false)),
    
        async execute(interaction, client){
            const { options, channel } = interaction;

            const user = options.getUser("target");
            const picture = options.getAttachment('picture');
            const reason = options.getString("reason") || "Kh√¥ng c√≥ l√Ω do";
            const responses = [
                `M√°y ch·ªß n√†y l√† n∆°i t√¥n nghi√™m, b·∫°n ƒë√£ vi ph·∫°m lu·∫≠t ƒë√£ ƒë∆∞·ª£c n√™u ra tr∆∞·ªõc ƒë√≥.`,

                `Freya b·ªã tr·ª•c xu·∫•t kh·ªèi √°nh s√°ng, b·ªã r√†ng bu·ªôc b·ªüi b√≥ng t·ªëi, Trong c√¥ ƒë∆°n, kh√¥ng t√¨m th·∫•y ni·ªÅm an ·ªßi. B·∫°n c≈©ng gi·ªëng v·∫≠y, sau n√†y h√£y h√†nh x·ª≠ nh∆∞ 1 chi·∫øn binh.`,

                `B·∫°n n√™n nh·ªõ lu·∫≠t server ƒë∆∞·ª£c ƒë·∫∑t ra, b·∫•t k√¨ ai c≈©ng ph·∫£i ch·∫•p h√†nh k·ªÉ c·∫£ Admin.`,

                `B·ªã c·∫•m kh·ªèi server, m·ªôt m√¨nh, Trong b√≥ng t·ªëi ng·ª± tr·ªã, n∆°i s·ª± im l·∫∑ng ng·ª± tr·ªã, Ti·∫øng vang c·ªßa s·ª± m·∫•t m√°t, ·ªü v√πng ƒë·ªìng b·∫±ng tr·ªëng tr·∫£i.`,
                                
                `‚òÖÂΩ° BÕôRÕôBÕô SÕôTÕôUÕôDÕôIÕôOÕô ÂΩ°‚òÖ l√† n∆°i h·ªôi t·ª• c√°c chi·∫øn binh valheim ng·ª± tr·ªã.H√£y tr·ªü th√†nh √°nh s√°ng d·∫´n d·∫Øt m·ªçi ng∆∞∆°i...`,
                
            ]

            // T√¨m n·∫°p ch·ªß bang h·ªôi
            const guildOwner = await interaction.guild.fetchOwner();
            const chusohuu = guildOwner.user.displayName;

            const randomMessage = responses[ Math.floor(Math.random() * responses.length)];

            const member = await interaction.guild.members.fetch(user.id);

            const errEmbed = new EmbedBuilder()
                .setDescription(`b·∫°n kh√¥ng th·ªÉ th·ª±c hi·ªán h√†nh ƒë·ªông v·ªõi ${user.displayName} v√¨ h·ªç c√≥ vai tr√≤ cao h∆°n.\n\n\n ${randomMessage}`)
                .setColor(0xc72c3b)

            if (member.roles.highest.position >= interaction.member.roles.highest.position)
                return interaction.reply({ embeds: [errEmbed], ephemeral: true });

        try {    
            await member.kick({ reason });

            const hinhanh = `https://media1.tenor.com/m/9PPzm9JjGpsAAAAC/mochi-peach.gif`

            const embed = new EmbedBuilder()
                .setDescription(`${interaction.user.displayName} ƒê√£ ƒë√° th√†nh c√¥ng ${user} v·ªõi l√Ω do: ${reason}`)
                .setThumbnail(hinhanh)
                .addFields({ name: 'H√¨nh ·∫£nh b·∫±ng ch·ª©ng (n·∫øu c√≥) ‚§µ', value: `> üëá Xem b√™n d∆∞·ªõi üëá` })
                .setFooter({ text: `${randomMessage}`})

                if (picture) {
                    embed.setImage(picture.url);
                }

            const dmEmbed = new EmbedBuilder()
                .setColor(`Red`)
                .setAuthor({ name: `ƒê√¢y l√† tin nh·∫Øn c·ªßa ${client.user.username}`})
                .setTitle(`TH√îNG TIN ƒê·∫¶Y ƒê·ª¶ V·ªÄ VI·ªÜC KICK TV ‚§µ`)
                .addFields({ name: 'T√™n m√°y ch·ªß b·ªã ƒë√°', value: `> ***${interaction.guild.name}***`, inline: false })
                .addFields({ name: 'Ch·ªß s·ªü h·ªØu m√°y ch·ªß', value: `> ***${chusohuu}***`, inline: false })
                .addFields({ name: 'Ng∆∞·ªùi ƒë√° b·∫°n kh·ªèi m√°y ch·ªß', value: `> ***${interaction.user.displayName}***`, inline: false })
                .addFields({ name: 'L√Ω do', value: `> ${reason}`, inline: false })
                .addFields({ name: 'H√¨nh ·∫£nh b·∫±ng ch·ª©ng (n·∫øu c√≥) ‚§µ', value: `> üëá Xem b√™n d∆∞·ªõi üëá` })
                .setFooter({ text: `${randomMessage}`})
                .setThumbnail(client.user.avatarURL())

                if (picture) {
                    dmEmbed.setImage(picture.url);
                }

            await user.send({ embeds: [dmEmbed] }).catch((err) => { return client.logs.error('[KICK] G·ª≠i tin nh·∫Øn tr·ª±c ti·∫øp cho ng∆∞·ªùi d√πng kh√¥ng th√†nh c√¥ng.') }); // g·ª≠i tin nh·∫Øn DM cho ng∆∞·ªùi d√πng

            await interaction.reply({
                embeds: [embed],
            }); // g·ª≠i tin nh·∫Øn th√¥ng b√°o cho ng∆∞·ªùi d√πng l·ªánh
        } catch (err) {
            console.error(err);
            return interaction.reply({ content: `Kh√¥ng th·ªÉ ƒë√° th√†nh vi√™n n√†y! H√£y ki·ªÉm tra v·ªã tr√≠ vai tr√≤ c·ªßa t√¥i v√† th·ª≠ l·∫°i.`, ephemeral: true });
        }    
    }
}