const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('bitcoin')
        .setDescription('Xem gi√° tr·ªã Bitcoin ho·∫∑c chuy·ªÉn ƒë·ªïi Bitcoin sang ti·ªÅn t·ªá')
        .addNumberOption(option =>
            option.setName('amount')
                .setDescription('S·ªë l∆∞·ª£ng Bitcoin b·∫°n mu·ªën chuy·ªÉn ƒë·ªïi')
                .setRequired(false)),

    async execute(interaction) {
        // L·∫•y s·ªë l∆∞·ª£ng Bitcoin (m·∫∑c ƒë·ªãnh l√† 1 n·∫øu kh√¥ng c√≥ ƒë·∫ßu v√†o)
        const amount = interaction.options.getNumber('amount') || 1;

        // S·ª≠ d·ª•ng c√∫ ph√°p import() ƒë·ªông ƒë·ªÉ t·∫£i node-fetch
        const fetch = await import('node-fetch').then(mod => mod.default);

        // Fetch d·ªØ li·ªáu t·ª´ blockchain.info
        let res = await fetch(encodeURI('https://blockchain.info/ticker'));
        let body = await res.json();

        // C√°c lo·∫°i ti·ªÅn t·ªá c·∫ßn chuy·ªÉn ƒë·ªïi
        let types = {
            'usd': 'en-US',
            'cad': 'en-CA',
            'cny': 'en-CN',
            'jpy': 'en-JP',
            'hkd': 'en-HK',
            'rub': 'en-RU'
        };

        // T·ª∑ gi√° h·ªëi ƒëo√°i USD sang VND (gi·∫£ ƒë·ªãnh l√† 1 USD = 24,000 VND)
        const exchangeRateVND = 24000;

        // T·∫°o embed ƒë·ªÉ hi·ªÉn th·ªã k·∫øt qu·∫£
        let embed = new EmbedBuilder()
            .setTitle(`Chuy·ªÉn ƒë·ªïi ${amount} Bitcoin`)
            .setColor('Green')
            .setAuthor({ name: interaction.user.username, iconURL: interaction.user.displayAvatarURL() })
            .setFooter({ text: interaction.client.user.username, iconURL: interaction.client.user.displayAvatarURL() })
            .setTimestamp();

        // Duy·ªát qua t·ª´ng lo·∫°i ti·ªÅn t·ªá v√† th√™m v√†o embed
        for (let k in types) {
            let upK = k.toUpperCase();
            let format = new Intl.NumberFormat(types[k], {
                style: 'currency',
                currency: upK
            }).format(body[upK].last * amount);
            
            embed.addFields({ name: `Gi√° c·∫£ ${upK}`, value: `üí∞ ${format}`, inline: true });
        }

        // T√≠nh gi√° tr·ªã Bitcoin sang VND
        let bitcoinToUSD = body['USD'].last * amount; // Gi√° Bitcoin theo USD
        let bitcoinToVND = bitcoinToUSD * exchangeRateVND; // Chuy·ªÉn t·ª´ USD sang VND

        // ƒê·ªãnh d·∫°ng gi√° tr·ªã VND v√† th√™m v√†o embed
        let formatVND = new Intl.NumberFormat('vi-VN', {
            style: 'currency',
            currency: 'VND'
        }).format(bitcoinToVND);
        
        embed.addFields({ name: 'Gi√° c·∫£ VND', value: `üí∞ ${formatVND}`, inline: true });

        // G·ª≠i k·∫øt qu·∫£ tr·∫£ l·ªùi cho ng∆∞·ªùi d√πng
        await interaction.reply({ embeds: [embed] });
    }
};
