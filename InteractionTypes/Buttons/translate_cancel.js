const { EmbedBuilder } = require(`discord.js`);
const config = require(`../../config`)
const tienganhTranslationCollector = require(`./translate_tienganh.js`).translationCollector;
const tienganhTranslationEvents = require('./translate_tienganh.js').translationEvents;
const tiengvietTranslationCollector = require('./translate_tiengviet.js').translationCollector;
const tiengvietTranslationEvents = require('./translate_tiengviet.js').translationEvents;

module.exports = {
    id: 'translate_cancel',
    async execute(interaction, client) {
        const userId = interaction.user.id;

        let collectorStopped = false;

        // Ki·ªÉm tra v√† d·ª´ng collector c·ªßa `tienganh_translate`
        if (tienganhTranslationCollector.has(userId)) {
            const collector = tienganhTranslationCollector.get(userId);
            collector.stop('translate_cancel');
            tienganhTranslationCollector.delete(userId);
            delete tienganhTranslationEvents[userId];
            collectorStopped = true;
        }

        // Ki·ªÉm tra v√† d·ª´ng collector c·ªßa `tiengviet_translate`
        if (tiengvietTranslationCollector.has(userId)) {
            const collector = tiengvietTranslationCollector.get(userId);
            collector.stop('translate_cancel');
            tiengvietTranslationCollector.delete(userId);
            delete tiengvietTranslationEvents[userId];
            collectorStopped = true;
        }

        // Th√¥ng b√°o h·ªßy b·ªè d·ªãch
        if (collectorStopped) {
            const cancelEmbed = new EmbedBuilder()
                .setColor(config.embedRed)
                .setTitle('üö´ D·ªãch ƒë√£ b·ªã h·ªßy')
                .setDescription('Vi·ªác d·ªãch tin nh·∫Øn c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c h·ªßy b·ªè.')
                .setTimestamp()
                .setFooter({ text: `Ch√∫c b·∫°n 1 ng√†y t·ªët l√†nh t·∫°i ***${interaction.guild.name}***` });

            await interaction.reply({ embeds: [cancelEmbed], ephemeral: true });
        } else {
            // N·∫øu kh√¥ng c√≥ s·ª± ki·ªán d·ªãch, th√¥ng b√°o r·∫±ng kh√¥ng c√≥ g√¨ ƒë·ªÉ h·ªßy b·ªè
            await interaction.reply({
                content: 'Kh√¥ng c√≥ qu√° tr√¨nh d·ªãch n√†o ƒë·ªÉ h·ªßy.',
                ephemeral: true,
            });
        }
    },
};
